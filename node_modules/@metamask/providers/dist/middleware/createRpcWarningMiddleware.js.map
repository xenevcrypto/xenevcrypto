{"version":3,"file":"createRpcWarningMiddleware.js","sourceRoot":"","sources":["../../src/middleware/createRpcWarningMiddleware.ts"],"names":[],"mappings":";;;;;;AAEA,2DAAmC;AAGnC;;;;;GAKG;AACH,SAAgB,0BAA0B,CACxC,GAAgB;IAEhB,MAAM,YAAY,GAAG;QACnB,qBAAqB,EAAE,KAAK;QAC5B,oCAAoC,EAAE,KAAK;KAC5C,CAAC;IAEF,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;QACzB,IAAI,CAAC,YAAY,CAAC,qBAAqB,IAAI,GAAG,CAAC,MAAM,KAAK,aAAa,EAAE;YACvE,GAAG,CAAC,IAAI,CAAC,kBAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACtD,YAAY,CAAC,qBAAqB,GAAG,IAAI,CAAC;SAC3C;aAAM,IACL,CAAC,YAAY,CAAC,oCAAoC;YAClD,GAAG,CAAC,MAAM,KAAK,4BAA4B,EAC3C;YACA,GAAG,CAAC,IAAI,CAAC,kBAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;YACrE,YAAY,CAAC,oCAAoC,GAAG,IAAI,CAAC;SAC1D;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;AACJ,CAAC;AArBD,gEAqBC","sourcesContent":["import type { JsonRpcMiddleware } from 'json-rpc-engine';\n\nimport messages from '../messages';\nimport type { ConsoleLike } from '../utils';\n\n/**\n * Create JSON-RPC middleware that logs warnings for deprecated RPC methods.\n *\n * @param log - The logging API to use.\n * @returns The JSON-RPC middleware.\n */\nexport function createRpcWarningMiddleware(\n  log: ConsoleLike,\n): JsonRpcMiddleware<unknown, unknown> {\n  const sentWarnings = {\n    ethDecryptDeprecation: false,\n    ethGetEncryptionPublicKeyDeprecation: false,\n  };\n\n  return (req, _res, next) => {\n    if (!sentWarnings.ethDecryptDeprecation && req.method === 'eth_decrypt') {\n      log.warn(messages.warnings.rpc.ethDecryptDeprecation);\n      sentWarnings.ethDecryptDeprecation = true;\n    } else if (\n      !sentWarnings.ethGetEncryptionPublicKeyDeprecation &&\n      req.method === 'eth_getEncryptionPublicKey'\n    ) {\n      log.warn(messages.warnings.rpc.ethGetEncryptionPublicKeyDeprecation);\n      sentWarnings.ethGetEncryptionPublicKeyDeprecation = true;\n    }\n    next();\n  };\n}\n"]}
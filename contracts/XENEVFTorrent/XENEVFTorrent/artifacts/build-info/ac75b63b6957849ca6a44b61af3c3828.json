{
	"id": "ac75b63b6957849ca6a44b61af3c3828",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"XENFT/Base64.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides a set of functions to operate with Base64 strings.\r\n *\r\n * _Available since v4.5._\r\n */\r\nlibrary Base64 {\r\n    /**\r\n     * @dev Base64 Encoding/Decoding Table\r\n     */\r\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n    /**\r\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\r\n     */\r\n    function encode(bytes memory data) internal pure returns (string memory) {\r\n        /**\r\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\r\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\r\n         */\r\n        if (data.length == 0) return \"\";\r\n\r\n        // Loads the table into memory\r\n        string memory table = _TABLE;\r\n\r\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\r\n        // and split into 4 numbers of 6 bits.\r\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\r\n        // - `data.length + 2`  -> Round up\r\n        // - `/ 3`              -> Number of 3-bytes chunks\r\n        // - `4 *`              -> 4 characters for each chunk\r\n        string memory result = new string(4 * ((data.length + 2) / 3));\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            // Prepare the lookup table (skip the first \"length\" byte)\r\n            let tablePtr := add(table, 1)\r\n\r\n            // Prepare result pointer, jump over length\r\n            let resultPtr := add(result, 32)\r\n\r\n            // Run over the input, 3 bytes at a time\r\n            for {\r\n                let dataPtr := data\r\n                let endPtr := add(data, mload(data))\r\n            } lt(dataPtr, endPtr) {\r\n\r\n            } {\r\n                // Advance 3 bytes\r\n                dataPtr := add(dataPtr, 3)\r\n                let input := mload(dataPtr)\r\n\r\n                // To write each character, shift the 3 bytes (18 bits) chunk\r\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\r\n                // and apply logical AND with 0x3F which is the number of\r\n                // the previous character in the ASCII table prior to the Base64 Table\r\n                // The result is then added to the table to get the character to write,\r\n                // and finally write it in the result pointer but with a left shift\r\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n            }\r\n\r\n            // When data `bytes` is not exactly 3 bytes long\r\n            // it is padded with `=` characters at the end\r\n            switch mod(mload(data), 3)\r\n            case 1 {\r\n                mstore8(sub(resultPtr, 1), 0x3d)\r\n                mstore8(sub(resultPtr, 2), 0x3d)\r\n            }\r\n            case 2 {\r\n                mstore8(sub(resultPtr, 1), 0x3d)\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"XENFT/Base64.sol": {
				"Base64": {
					"abi": [],
					"devdoc": {
						"details": "Provides a set of functions to operate with Base64 strings. _Available since v4.5._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_TABLE": {
								"details": "Base64 Encoding/Decoding Table"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"XENFT/Base64.sol\":241:3624  library Base64 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"XENFT/Base64.sol\":241:3624  library Base64 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094617dfb5d106326faa20986f1a58bfdac71330967fa29bdb712e8600b4844c064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094617dfb5d106326faa20986f1a58bfdac71330967fa29bdb712e8600b4844c064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH2 0x7DFB 0x5D LT PUSH4 0x26FAA209 DUP7 CALL 0xA5 DUP12 REVERT 0xAC PUSH18 0x330967FA29BDB712E8600B4844C064736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "241:3383:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;241:3383:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094617dfb5d106326faa20986f1a58bfdac71330967fa29bdb712e8600b4844c064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH2 0x7DFB 0x5D LT PUSH4 0x26FAA209 DUP7 CALL 0xA5 DUP12 REVERT 0xAC PUSH18 0x330967FA29BDB712E8600B4844C064736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "241:3383:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"encode(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 3624,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094617dfb5d106326faa20986f1a58bfdac71330967fa29bdb712e8600b4844c064736f6c63430008120033",
									".code": [
										{
											"begin": 241,
											"end": 3624,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 3624,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"XENFT/Base64.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"XENFT/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"XENFT/Base64.sol\":{\"keccak256\":\"0x05156eae9e54b8acd0b8d9bfbf4be79303b7c960450d2cce5390236a13864b2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7793021f72350a340fa48ddc727be3c6ca4774894f0d4a550902217d20c4e08\",\"dweb:/ipfs/QmVJFiSrNjHLdKtff9esNzfHoDGoyG1GAiTmgbJ8NENSvZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"XENFT/Base64.sol": {
				"ast": {
					"absolutePath": "XENFT/Base64.sol",
					"exportedSymbols": {
						"Base64": [
							46
						]
					},
					"id": 47,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base64",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "130:109:0",
								"text": " @dev Provides a set of functions to operate with Base64 strings.\n _Available since v4.5._"
							},
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "Base64",
							"nameLocation": "249:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "263:56:0",
										"text": " @dev Base64 Encoding/Decoding Table"
									},
									"id": 6,
									"mutability": "constant",
									"name": "_TABLE",
									"nameLocation": "350:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 46,
									"src": "325:100:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 4,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "325:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "359:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce",
											"typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""
										},
										"value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "597:3024:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 14,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "819:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "824:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "834:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "819:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol",
												"id": 20,
												"nodeType": "IfStatement",
												"src": "815:31:0",
												"trueBody": {
													"expression": {
														"hexValue": "",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "844:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"functionReturnParameters": 13,
													"id": 19,
													"nodeType": "Return",
													"src": "837:9:0"
												}
											},
											{
												"assignments": [
													22
												],
												"declarations": [
													{
														"constant": false,
														"id": 22,
														"mutability": "mutable",
														"name": "table",
														"nameLocation": "913:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "899:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 21,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 24,
												"initialValue": {
													"id": 23,
													"name": "_TABLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "921:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "899:28:0"
											},
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1352:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "1338:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 25,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 40,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 36,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 33,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 30,
																							"name": "data",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 9,
																							"src": "1378:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 31,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1383:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1378:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 32,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1392:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "1378:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 34,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1377:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1397:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1377:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 37,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1376:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1372:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1361:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 27,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1365:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1361:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1338:62:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1466:2122:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1553:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "table",
																		"nodeType": "YulIdentifier",
																		"src": "1573:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1569:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:13:0"
															},
															"variables": [
																{
																	"name": "tablePtr",
																	"nodeType": "YulTypedName",
																	"src": "1557:8:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1655:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "1676:6:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1684:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:15:0"
															},
															"variables": [
																{
																	"name": "resultPtr",
																	"nodeType": "YulTypedName",
																	"src": "1659:9:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1908:1281:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1963:26:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1978:7:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:0",
																					"type": "",
																					"value": "3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1974:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:15:0"
																		},
																		"variableNames": [
																			{
																				"name": "dataPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1963:7:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2007:27:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2026:7:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2020:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2020:14:0"
																		},
																		"variables": [
																			{
																				"name": "input",
																				"nodeType": "YulTypedName",
																				"src": "2011:5:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2628:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nodeType": "YulIdentifier",
																									"src": "2649:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2667:2:0",
																													"type": "",
																													"value": "18"
																												},
																												{
																													"name": "input",
																													"nodeType": "YulIdentifier",
																													"src": "2671:5:0"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nodeType": "YulIdentifier",
																												"src": "2663:3:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2663:14:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2679:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2659:25:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2645:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2645:40:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2639:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2639:47:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "2620:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2620:67:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2620:67:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2705:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2722:9:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2718:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2705:9:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2774:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nodeType": "YulIdentifier",
																									"src": "2795:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2813:2:0",
																													"type": "",
																													"value": "12"
																												},
																												{
																													"name": "input",
																													"nodeType": "YulIdentifier",
																													"src": "2817:5:0"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nodeType": "YulIdentifier",
																												"src": "2809:3:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2809:14:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2825:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "2805:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2805:25:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2791:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2791:40:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2785:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2785:47:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "2766:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2766:67:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2766:67:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2851:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2868:9:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2879:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2864:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2864:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2851:9:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2920:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nodeType": "YulIdentifier",
																									"src": "2941:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2959:1:0",
																													"type": "",
																													"value": "6"
																												},
																												{
																													"name": "input",
																													"nodeType": "YulIdentifier",
																													"src": "2962:5:0"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nodeType": "YulIdentifier",
																												"src": "2955:3:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2955:13:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2970:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "2951:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2951:24:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2937:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2937:39:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2931:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2931:46:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "2912:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2912:66:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2912:66:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2996:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3013:9:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3024:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3009:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3009:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2996:9:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3065:9:0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nodeType": "YulIdentifier",
																									"src": "3086:8:0"
																								},
																								{
																									"arguments": [
																										{
																											"name": "input",
																											"nodeType": "YulIdentifier",
																											"src": "3100:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3107:4:0",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "3096:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3096:16:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3082:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3082:31:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3076:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3076:38:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "3057:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3057:58:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3057:58:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3133:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3150:9:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3161:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3146:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3146:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3133:9:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "dataPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1872:7:0"
																	},
																	{
																		"name": "endPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1881:6:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1869:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:19:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1889:18:0",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1761:107:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1780:19:0",
																		"value": {
																			"name": "data",
																			"nodeType": "YulIdentifier",
																			"src": "1795:4:0"
																		},
																		"variables": [
																			{
																				"name": "dataPtr",
																				"nodeType": "YulTypedName",
																				"src": "1784:7:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1817:36:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1835:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nodeType": "YulIdentifier",
																							"src": "1847:4:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1841:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1841:11:0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1831:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1831:22:0"
																		},
																		"variables": [
																			{
																				"name": "endPtr",
																				"nodeType": "YulTypedName",
																				"src": "1821:6:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1757:1432:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3374:116:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3405:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3416:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3401:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3401:17:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3420:4:0",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "3393:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3393:32:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3393:32:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3455:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3466:1:0",
																									"type": "",
																									"value": "2"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3451:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3451:17:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3470:4:0",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "3443:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3443:32:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3443:32:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3367:123:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:1:0",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3511:66:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3542:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3553:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3538:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3538:17:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3557:4:0",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "3530:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3530:32:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3530:32:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3504:73:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3509:1:0",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3344:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3338:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3338:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:1:0",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "3334:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:19:0"
															},
															"nodeType": "YulSwitch",
															"src": "3327:250:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1795:4:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1835:4:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1847:4:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "3344:4:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "1676:6:0",
														"valueSize": 1
													},
													{
														"declaration": 22,
														"isOffset": false,
														"isSlot": false,
														"src": "1573:5:0",
														"valueSize": 1
													}
												],
												"id": 41,
												"nodeType": "InlineAssembly",
												"src": "1457:2131:0"
											},
											{
												"expression": {
													"id": 42,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "3607:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 13,
												"id": 43,
												"nodeType": "Return",
												"src": "3600:13:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "434:84:0",
										"text": " @dev Converts a `bytes` to its Bytes64 `string` representation."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nameLocation": "533:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "553:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "540:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:19:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "582:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:15:0"
									},
									"scope": 46,
									"src": "524:3097:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 47,
							"src": "241:3383:0",
							"usedErrors": []
						}
					],
					"src": "103:3521:0"
				},
				"id": 0
			}
		}
	}
}
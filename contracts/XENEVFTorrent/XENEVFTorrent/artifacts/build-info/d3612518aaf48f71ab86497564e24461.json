{
	"id": "d3612518aaf48f71ab86497564e24461",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"XENFT/StringData.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n/*\r\n    Extra XEN quotes:\r\n\r\n    \"When you realize nothing is lacking, the whole world belongs to you.\" - Lao Tzu\r\n    \"Each morning, we are born again. What we do today is what matters most.\" - Buddha\r\n    \"If you are depressed, you are living in the past.\" - Lao Tzu\r\n    \"In true dialogue, both sides are willing to change.\" - Thich Nhat Hanh\r\n    \"The spirit of the individual is determined by his domination thought habits.\" - Bruce Lee\r\n    \"Be the path. Do not seek it.\" - Yara Tschallener\r\n    \"Bow to no one but your own divinity.\" - Satya\r\n    \"With insight there is hope for awareness, and with awareness there can be change.\" - Tom Kenyon\r\n    \"The opposite of depression isn't happiness, it is purpose.\" - Derek Sivers\r\n    \"If you can't, you must.\" - Tony Robbins\r\n    “When you are grateful, fear disappears and abundance appears.” - Lao Tzu\r\n    “It is in your moments of decision that your destiny is shaped.” - Tony Robbins\r\n    \"Surmounting difficulty is the crucible that forms character.\" - Tony Robbins\r\n    \"Three things cannot be long hidden: the sun, the moon, and the truth.\" - Buddha\r\n    \"What you are is what you have been. What you’ll be is what you do now.\" - Buddha\r\n    \"The best way to take care of our future is to take care of the present moment.\" - Thich Nhat Hanh\r\n*/\r\n\r\n/**\r\n   @dev  a library to supply a XEN string data based on params\r\n*/\r\nlibrary StringData {\r\n    uint256 public constant QUOTES_COUNT = 12;\r\n    uint256 public constant QUOTE_LENGTH = 66;\r\n    bytes public constant QUOTES =\r\n        bytes(\r\n            '\"The mind is everything. What you think, you become.\"- Buda       '\r\n            '\"What we are is the result of what we have thought.\"-Nikola Tesla '\r\n            '\"Failures are simply steps towards success\".- Elon Musk.          '\r\n            '\"The only way to do great work is to love what you do.\"-Steve Jobs'\r\n            '\"Hatred can only be overcome by love.\"- Buda                      '\r\n            '\"Simplicity is the ultimate sophistication.\" -Leonardo da Vinci.  '\r\n            '\"Be the change you wish to see in the world.\"-Mahatma Gandhi.     '\r\n            '\"Curiosity is more important than knowledge.\" - Albert Einstein   '\r\n            '\"There is no path to happiness:happiness is the path.\"- Buda      '\r\n            '\"What we are is the result of what we have thought.\"-Nikola Tesla '\r\n            '\"Peace comes from within. Do not seek it without.\"- Buda          '\r\n            '\"A man must learn to sail in strong winds.\" - Elon Musk.          '\r\n        );\r\n      \r\n            \r\n            \r\n    uint256 public constant CLASSES_COUNT = 14;\r\n    uint256 public constant CLASSES_NAME_LENGTH = 10;\r\n    bytes public constant CLASSES =\r\n        bytes(\r\n            \"Ruby      \"\r\n            \"Opal      \"\r\n            \"Topaz     \"\r\n            \"Emerald   \"\r\n            \"Aquamarine\"\r\n            \"Sapphire  \"\r\n            \"Amethyst  \"\r\n            \"Xenturion \"\r\n            \"Limited   \"\r\n            \"Rare      \"\r\n            \"Epic      \"\r\n            \"Legendary \"\r\n            \"Exotic    \"\r\n            \"Xunicorn  \"\r\n        );\r\n\r\n    /**\r\n        @dev    Solidity doesn't yet support slicing of byte arrays anywhere outside of calldata,\r\n                therefore we make a hack by supplying our local constant packed string array as calldata\r\n    */\r\n    function getQuote(bytes calldata quotes, uint256 index) external pure returns (string memory) {\r\n        if (index > QUOTES_COUNT - 1) return string(quotes[0:QUOTE_LENGTH]);\r\n        return string(quotes[index * QUOTE_LENGTH:(index + 1) * QUOTE_LENGTH]);\r\n    }\r\n\r\n    function getClassName(bytes calldata names, uint256 index) external pure returns (string memory) {\r\n        if (index < CLASSES_COUNT) return string(names[index * CLASSES_NAME_LENGTH:(index + 1) * CLASSES_NAME_LENGTH]);\r\n        return \"\";\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"XENFT/StringData.sol": {
				"StringData": {
					"abi": [
						{
							"inputs": [],
							"name": "CLASSES",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CLASSES_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CLASSES_NAME_LENGTH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "QUOTES",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "QUOTES_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "QUOTE_LENGTH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "names",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getClassName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "quotes",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getQuote",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "a library to supply a XEN string data based on params",
						"kind": "dev",
						"methods": {
							"getQuote(bytes,uint256)": {
								"details": "Solidity doesn't yet support slicing of byte arrays anywhere outside of calldata, therefore we make a hack by supplying our local constant packed string array as calldata"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"XENFT/StringData.sol\":1453:3934  library StringData {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"XENFT/StringData.sol\":1453:3934  library StringData {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x831b46a1\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x831b46a1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8e2196ed\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb0eca69b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe0beab2d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x02c1a14c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x192a63ed\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3a24b8ef\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x48b25502\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"XENFT/StringData.sol\":2708:2756  uint256 public constant CLASSES_NAME_LENGTH = 10 */\n    tag_2:\n      tag_11\n        /* \"XENFT/StringData.sol\":2754:2756  10 */\n      0x0a\n        /* \"XENFT/StringData.sol\":2708:2756  uint256 public constant CLASSES_NAME_LENGTH = 10 */\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":168:193   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":156:158   */\n      0x20\n        /* \"#utility.yul\":141:159   */\n      add\n        /* \"XENFT/StringData.sol\":2708:2756  uint256 public constant CLASSES_NAME_LENGTH = 10 */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"XENFT/StringData.sol\":1479:1520  uint256 public constant QUOTES_COUNT = 12 */\n    tag_3:\n      tag_11\n        /* \"XENFT/StringData.sol\":1518:1520  12 */\n      0x0c\n        /* \"XENFT/StringData.sol\":1479:1520  uint256 public constant QUOTES_COUNT = 12 */\n      dup2\n      jump\n        /* \"XENFT/StringData.sol\":1575:2616  bytes public constant QUOTES =... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n        /* \"XENFT/StringData.sol\":1527:1568  uint256 public constant QUOTE_LENGTH = 66 */\n    tag_5:\n      tag_11\n        /* \"XENFT/StringData.sol\":1566:1568  66 */\n      0x42\n        /* \"XENFT/StringData.sol\":1527:1568  uint256 public constant QUOTE_LENGTH = 66 */\n      dup2\n      jump\n        /* \"XENFT/StringData.sol\":3416:3677  function getQuote(bytes calldata quotes, uint256 index) external pure returns (string memory) {... */\n    tag_6:\n      tag_18\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"XENFT/StringData.sol\":2659:2701  uint256 public constant CLASSES_COUNT = 14 */\n    tag_7:\n      tag_11\n        /* \"XENFT/StringData.sol\":2699:2701  14 */\n      0x0e\n        /* \"XENFT/StringData.sol\":2659:2701  uint256 public constant CLASSES_COUNT = 14 */\n      dup2\n      jump\n        /* \"XENFT/StringData.sol\":3685:3931  function getClassName(bytes calldata names, uint256 index) external pure returns (string memory) {... */\n    tag_8:\n      tag_18\n      tag_35\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"XENFT/StringData.sol\":2763:3185  bytes public constant CLASSES =... */\n    tag_9:\n      tag_18\n      tag_39\n      jump\t// in\n        /* \"XENFT/StringData.sol\":1575:2616  bytes public constant QUOTES =... */\n    tag_19:\n        /* \"XENFT/StringData.sol\":1615:2616  bytes(... */\n      mload(0x40)\n      dup1\n      0x0340\n      add\n      0x40\n      mstore\n      dup1\n      0x0318\n      dup2\n      mstore\n      0x20\n      add\n      data_30c01ef9efa2ddb7bce50464f03e565ba8d42727a8dfc2f58ac6d55d398a452a\n      0x0318\n      swap2\n      codecopy\n        /* \"XENFT/StringData.sol\":1575:2616  bytes public constant QUOTES =... */\n      dup2\n      jump\t// out\n        /* \"XENFT/StringData.sol\":3416:3677  function getQuote(bytes calldata quotes, uint256 index) external pure returns (string memory) {... */\n    tag_28:\n        /* \"XENFT/StringData.sol\":3495:3508  string memory */\n      0x60\n        /* \"XENFT/StringData.sol\":3533:3549  QUOTES_COUNT - 1 */\n      tag_42\n        /* \"XENFT/StringData.sol\":3548:3549  1 */\n      0x01\n        /* \"XENFT/StringData.sol\":1518:1520  12 */\n      0x0c\n        /* \"XENFT/StringData.sol\":3533:3549  QUOTES_COUNT - 1 */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"XENFT/StringData.sol\":3525:3530  index */\n      dup3\n        /* \"XENFT/StringData.sol\":3525:3549  index > QUOTES_COUNT - 1 */\n      gt\n        /* \"XENFT/StringData.sol\":3521:3588  if (index > QUOTES_COUNT - 1) return string(quotes[0:QUOTE_LENGTH]) */\n      iszero\n      tag_44\n      jumpi\n        /* \"XENFT/StringData.sol\":3565:3587  quotes[0:QUOTE_LENGTH] */\n      tag_45\n        /* \"XENFT/StringData.sol\":1566:1568  66 */\n      0x42\n        /* \"XENFT/StringData.sol\":3572:3573  0 */\n      0x00\n        /* \"XENFT/StringData.sol\":3565:3571  quotes */\n      dup6\n      dup8\n        /* \"XENFT/StringData.sol\":3565:3587  quotes[0:QUOTE_LENGTH] */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"XENFT/StringData.sol\":3551:3588  return string(quotes[0:QUOTE_LENGTH]) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap4\n      pop\n      tag_41\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"XENFT/StringData.sol\":3521:3588  if (index > QUOTES_COUNT - 1) return string(quotes[0:QUOTE_LENGTH]) */\n    tag_44:\n        /* \"XENFT/StringData.sol\":3613:3619  quotes */\n      dup4\n      dup4\n        /* \"XENFT/StringData.sol\":3620:3640  index * QUOTE_LENGTH */\n      tag_47\n        /* \"XENFT/StringData.sol\":1566:1568  66 */\n      0x42\n        /* \"XENFT/StringData.sol\":3620:3625  index */\n      dup6\n        /* \"XENFT/StringData.sol\":3620:3640  index * QUOTE_LENGTH */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"XENFT/StringData.sol\":3613:3668  quotes[index * QUOTE_LENGTH:(index + 1) * QUOTE_LENGTH] */\n      swap1\n        /* \"XENFT/StringData.sol\":1566:1568  66 */\n      0x42\n        /* \"XENFT/StringData.sol\":3642:3651  index + 1 */\n      tag_49\n        /* \"XENFT/StringData.sol\":3642:3647  index */\n      dup7\n        /* \"XENFT/StringData.sol\":3650:3651  1 */\n      0x01\n        /* \"XENFT/StringData.sol\":3642:3651  index + 1 */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"XENFT/StringData.sol\":3641:3667  (index + 1) * QUOTE_LENGTH */\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n        /* \"XENFT/StringData.sol\":3613:3668  quotes[index * QUOTE_LENGTH:(index + 1) * QUOTE_LENGTH] */\n      swap3\n      tag_52\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_52:\n        /* \"XENFT/StringData.sol\":3599:3669  return string(quotes[index * QUOTE_LENGTH:(index + 1) * QUOTE_LENGTH]) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"XENFT/StringData.sol\":3416:3677  function getQuote(bytes calldata quotes, uint256 index) external pure returns (string memory) {... */\n    tag_41:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"XENFT/StringData.sol\":3685:3931  function getClassName(bytes calldata names, uint256 index) external pure returns (string memory) {... */\n    tag_36:\n        /* \"XENFT/StringData.sol\":3767:3780  string memory */\n      0x60\n        /* \"XENFT/StringData.sol\":2699:2701  14 */\n      0x0e\n        /* \"XENFT/StringData.sol\":3797:3802  index */\n      dup3\n        /* \"XENFT/StringData.sol\":3797:3818  index < CLASSES_COUNT */\n      lt\n        /* \"XENFT/StringData.sol\":3793:3903  if (index < CLASSES_COUNT) return string(names[index * CLASSES_NAME_LENGTH:(index + 1) * CLASSES_NAME_LENGTH]) */\n      iszero\n      tag_54\n      jumpi\n        /* \"XENFT/StringData.sol\":3834:3839  names */\n      dup4\n      dup4\n        /* \"XENFT/StringData.sol\":3840:3867  index * CLASSES_NAME_LENGTH */\n      tag_55\n        /* \"XENFT/StringData.sol\":2754:2756  10 */\n      0x0a\n        /* \"XENFT/StringData.sol\":3840:3845  index */\n      dup6\n        /* \"XENFT/StringData.sol\":3840:3867  index * CLASSES_NAME_LENGTH */\n      tag_48\n      jump\t// in\n    tag_55:\n        /* \"XENFT/StringData.sol\":3834:3902  names[index * CLASSES_NAME_LENGTH:(index + 1) * CLASSES_NAME_LENGTH] */\n      swap1\n        /* \"XENFT/StringData.sol\":2754:2756  10 */\n      0x0a\n        /* \"XENFT/StringData.sol\":3869:3878  index + 1 */\n      tag_56\n        /* \"XENFT/StringData.sol\":3869:3874  index */\n      dup7\n        /* \"XENFT/StringData.sol\":3877:3878  1 */\n      0x01\n        /* \"XENFT/StringData.sol\":3869:3878  index + 1 */\n      tag_50\n      jump\t// in\n    tag_56:\n        /* \"XENFT/StringData.sol\":3868:3901  (index + 1) * CLASSES_NAME_LENGTH */\n      tag_57\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_57:\n        /* \"XENFT/StringData.sol\":3834:3902  names[index * CLASSES_NAME_LENGTH:(index + 1) * CLASSES_NAME_LENGTH] */\n      swap3\n      tag_45\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n        /* \"XENFT/StringData.sol\":3793:3903  if (index < CLASSES_COUNT) return string(names[index * CLASSES_NAME_LENGTH:(index + 1) * CLASSES_NAME_LENGTH]) */\n    tag_54:\n      pop\n        /* \"XENFT/StringData.sol\":3914:3923  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n        /* \"XENFT/StringData.sol\":3685:3931  function getClassName(bytes calldata names, uint256 index) external pure returns (string memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"XENFT/StringData.sol\":2763:3185  bytes public constant CLASSES =... */\n    tag_39:\n        /* \"XENFT/StringData.sol\":2804:3185  bytes(... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      0x8c\n      dup2\n      mstore\n      0x20\n      add\n      data_7afdaef82dee11b9c6d1fd7d2f94ad05c7d98b23da7d65609a6d8a54a3b50c72\n      0x8c\n      swap2\n      codecopy\n        /* \"XENFT/StringData.sol\":2763:3185  bytes public constant CLASSES =... */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":204:626   */\n    tag_59:\n        /* \"#utility.yul\":245:248   */\n      0x00\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":277:289   */\n      mload\n        /* \"#utility.yul\":310:316   */\n      dup1\n        /* \"#utility.yul\":305:308   */\n      dup5\n        /* \"#utility.yul\":298:317   */\n      mstore\n        /* \"#utility.yul\":335:336   */\n      0x00\n        /* \"#utility.yul\":345:507   */\n    tag_64:\n        /* \"#utility.yul\":359:365   */\n      dup2\n        /* \"#utility.yul\":356:357   */\n      dup2\n        /* \"#utility.yul\":353:366   */\n      lt\n        /* \"#utility.yul\":345:507   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":421:425   */\n      0x20\n        /* \"#utility.yul\":477:490   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":473:495   */\n      dup2\n      add\n        /* \"#utility.yul\":467:496   */\n      mload\n        /* \"#utility.yul\":449:460   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":445:465   */\n      dup3\n      add\n        /* \"#utility.yul\":438:497   */\n      mstore\n        /* \"#utility.yul\":374:386   */\n      add\n        /* \"#utility.yul\":345:507   */\n      jump(tag_64)\n    tag_66:\n        /* \"#utility.yul\":349:352   */\n      pop\n        /* \"#utility.yul\":552:553   */\n      0x00\n        /* \"#utility.yul\":545:549   */\n      0x20\n        /* \"#utility.yul\":536:542   */\n      dup3\n        /* \"#utility.yul\":531:534   */\n      dup7\n        /* \"#utility.yul\":527:543   */\n      add\n        /* \"#utility.yul\":523:550   */\n      add\n        /* \"#utility.yul\":516:554   */\n      mstore\n        /* \"#utility.yul\":615:619   */\n      0x20\n        /* \"#utility.yul\":608:610   */\n      0x1f\n        /* \"#utility.yul\":604:611   */\n      not\n        /* \"#utility.yul\":599:601   */\n      0x1f\n        /* \"#utility.yul\":591:597   */\n      dup4\n        /* \"#utility.yul\":587:602   */\n      add\n        /* \"#utility.yul\":583:612   */\n      and\n        /* \"#utility.yul\":578:581   */\n      dup6\n        /* \"#utility.yul\":574:613   */\n      add\n        /* \"#utility.yul\":570:620   */\n      add\n        /* \"#utility.yul\":563:620   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":204:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:856   */\n    tag_21:\n        /* \"#utility.yul\":786:788   */\n      0x20\n        /* \"#utility.yul\":775:784   */\n      dup2\n        /* \"#utility.yul\":768:789   */\n      mstore\n        /* \"#utility.yul\":749:753   */\n      0x00\n        /* \"#utility.yul\":806:850   */\n      tag_41\n        /* \"#utility.yul\":846:848   */\n      0x20\n        /* \"#utility.yul\":835:844   */\n      dup4\n        /* \"#utility.yul\":831:849   */\n      add\n        /* \"#utility.yul\":823:829   */\n      dup5\n        /* \"#utility.yul\":806:850   */\n      tag_59\n      jump\t// in\n        /* \"#utility.yul\":861:1526   */\n    tag_27:\n        /* \"#utility.yul\":940:946   */\n      0x00\n        /* \"#utility.yul\":948:954   */\n      dup1\n        /* \"#utility.yul\":956:962   */\n      0x00\n        /* \"#utility.yul\":1009:1011   */\n      0x40\n        /* \"#utility.yul\":997:1006   */\n      dup5\n        /* \"#utility.yul\":988:995   */\n      dup7\n        /* \"#utility.yul\":984:1007   */\n      sub\n        /* \"#utility.yul\":980:1012   */\n      slt\n        /* \"#utility.yul\":977:1029   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1025:1026   */\n      0x00\n        /* \"#utility.yul\":1022:1023   */\n      dup1\n        /* \"#utility.yul\":1015:1027   */\n      revert\n        /* \"#utility.yul\":977:1029   */\n    tag_70:\n        /* \"#utility.yul\":1065:1074   */\n      dup4\n        /* \"#utility.yul\":1052:1075   */\n      calldataload\n        /* \"#utility.yul\":1094:1112   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1135:1137   */\n      dup1\n        /* \"#utility.yul\":1127:1133   */\n      dup3\n        /* \"#utility.yul\":1124:1138   */\n      gt\n        /* \"#utility.yul\":1121:1155   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1151:1152   */\n      0x00\n        /* \"#utility.yul\":1148:1149   */\n      dup1\n        /* \"#utility.yul\":1141:1153   */\n      revert\n        /* \"#utility.yul\":1121:1155   */\n    tag_71:\n        /* \"#utility.yul\":1189:1195   */\n      dup2\n        /* \"#utility.yul\":1178:1187   */\n      dup7\n        /* \"#utility.yul\":1174:1196   */\n      add\n        /* \"#utility.yul\":1164:1196   */\n      swap2\n      pop\n        /* \"#utility.yul\":1234:1241   */\n      dup7\n        /* \"#utility.yul\":1227:1231   */\n      0x1f\n        /* \"#utility.yul\":1223:1225   */\n      dup4\n        /* \"#utility.yul\":1219:1232   */\n      add\n        /* \"#utility.yul\":1215:1242   */\n      slt\n        /* \"#utility.yul\":1205:1260   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1256:1257   */\n      0x00\n        /* \"#utility.yul\":1253:1254   */\n      dup1\n        /* \"#utility.yul\":1246:1258   */\n      revert\n        /* \"#utility.yul\":1205:1260   */\n    tag_72:\n        /* \"#utility.yul\":1296:1298   */\n      dup2\n        /* \"#utility.yul\":1283:1299   */\n      calldataload\n        /* \"#utility.yul\":1322:1324   */\n      dup2\n        /* \"#utility.yul\":1314:1320   */\n      dup2\n        /* \"#utility.yul\":1311:1325   */\n      gt\n        /* \"#utility.yul\":1308:1342   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1338:1339   */\n      0x00\n        /* \"#utility.yul\":1335:1336   */\n      dup1\n        /* \"#utility.yul\":1328:1340   */\n      revert\n        /* \"#utility.yul\":1308:1342   */\n    tag_73:\n        /* \"#utility.yul\":1385:1392   */\n      dup8\n        /* \"#utility.yul\":1378:1382   */\n      0x20\n        /* \"#utility.yul\":1369:1375   */\n      dup3\n        /* \"#utility.yul\":1365:1367   */\n      dup6\n        /* \"#utility.yul\":1361:1376   */\n      add\n        /* \"#utility.yul\":1357:1383   */\n      add\n        /* \"#utility.yul\":1354:1393   */\n      gt\n        /* \"#utility.yul\":1351:1410   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1406:1407   */\n      0x00\n        /* \"#utility.yul\":1403:1404   */\n      dup1\n        /* \"#utility.yul\":1396:1408   */\n      revert\n        /* \"#utility.yul\":1351:1410   */\n    tag_74:\n        /* \"#utility.yul\":1437:1441   */\n      0x20\n        /* \"#utility.yul\":1429:1442   */\n      swap3\n      dup4\n      add\n      swap9\n        /* \"#utility.yul\":1461:1467   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":1499:1519   */\n      swap6\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1486:1520   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":861:1526   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1763:1890   */\n    tag_60:\n        /* \"#utility.yul\":1824:1834   */\n      0x4e487b71\n        /* \"#utility.yul\":1819:1822   */\n      0xe0\n        /* \"#utility.yul\":1815:1835   */\n      shl\n        /* \"#utility.yul\":1812:1813   */\n      0x00\n        /* \"#utility.yul\":1805:1836   */\n      mstore\n        /* \"#utility.yul\":1855:1859   */\n      0x11\n        /* \"#utility.yul\":1852:1853   */\n      0x04\n        /* \"#utility.yul\":1845:1860   */\n      mstore\n        /* \"#utility.yul\":1879:1883   */\n      0x24\n        /* \"#utility.yul\":1876:1877   */\n      0x00\n        /* \"#utility.yul\":1869:1884   */\n      revert\n        /* \"#utility.yul\":1895:2023   */\n    tag_43:\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1983:1994   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1980:2017   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1997:2015   */\n      tag_80\n      tag_60\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1895:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2028:2359   */\n    tag_46:\n        /* \"#utility.yul\":2133:2142   */\n      0x00\n        /* \"#utility.yul\":2144:2153   */\n      dup1\n        /* \"#utility.yul\":2186:2194   */\n      dup6\n        /* \"#utility.yul\":2174:2184   */\n      dup6\n        /* \"#utility.yul\":2171:2195   */\n      gt\n        /* \"#utility.yul\":2168:2212   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":2208:2209   */\n      0x00\n        /* \"#utility.yul\":2205:2206   */\n      dup1\n        /* \"#utility.yul\":2198:2210   */\n      revert\n        /* \"#utility.yul\":2168:2212   */\n    tag_82:\n        /* \"#utility.yul\":2237:2243   */\n      dup4\n        /* \"#utility.yul\":2227:2235   */\n      dup7\n        /* \"#utility.yul\":2224:2244   */\n      gt\n        /* \"#utility.yul\":2221:2261   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2257:2258   */\n      0x00\n        /* \"#utility.yul\":2254:2255   */\n      dup1\n        /* \"#utility.yul\":2247:2259   */\n      revert\n        /* \"#utility.yul\":2221:2261   */\n    tag_83:\n      pop\n      pop\n        /* \"#utility.yul\":2283:2306   */\n      dup3\n      add\n      swap4\n        /* \"#utility.yul\":2328:2353   */\n      swap2\n      swap1\n      swap3\n      sub\n      swap2\n      pop\n        /* \"#utility.yul\":2028:2359   */\n      jump\t// out\n        /* \"#utility.yul\":2364:2532   */\n    tag_48:\n        /* \"#utility.yul\":2437:2446   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2468:2477   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2485:2500   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2479:2501   */\n      dup5\n      eq\n        /* \"#utility.yul\":2465:2502   */\n      or\n        /* \"#utility.yul\":2455:2526   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":2506:2524   */\n      tag_80\n      tag_60\n      jump\t// in\n        /* \"#utility.yul\":2537:2662   */\n    tag_50:\n        /* \"#utility.yul\":2602:2611   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2623:2633   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2620:2656   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":2636:2654   */\n      tag_80\n      tag_60\n      jump\t// in\n    stop\n    data_30c01ef9efa2ddb7bce50464f03e565ba8d42727a8dfc2f58ac6d55d398a452a 22546865206d696e642069732065766572797468696e672e205768617420796f75207468696e6b2c20796f75206265636f6d652e222d2042756461202020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c6120224661696c75726573206172652073696d706c7920737465707320746f77617264732073756363657373222e2d20456c6f6e204d75736b2e2020202020202020202022546865206f6e6c792077617920746f20646f20677265617420776f726b20697320746f206c6f7665207768617420796f7520646f2e222d5374657665204a6f6273224861747265642063616e206f6e6c79206265206f766572636f6d65206279206c6f76652e222d2042756461202020202020202020202020202020202020202020202253696d706c69636974792069732074686520756c74696d61746520736f706869737469636174696f6e2e22202d4c656f6e6172646f2064612056696e63692e202022426520746865206368616e676520796f75207769736820746f2073656520696e2074686520776f726c642e222d4d616861746d612047616e6468692e202020202022437572696f73697479206973206d6f726520696d706f7274616e74207468616e206b6e6f776c656467652e22202d20416c626572742045696e737465696e202020225468657265206973206e6f207061746820746f2068617070696e6573733a68617070696e6573732069732074686520706174682e222d20427564612020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c612022506561636520636f6d65732066726f6d2077697468696e2e20446f206e6f74207365656b20697420776974686f75742e222d2042756461202020202020202020202241206d616e206d757374206c6561726e20746f207361696c20696e207374726f6e672077696e64732e22202d20456c6f6e204d75736b2e20202020202020202020\n    data_7afdaef82dee11b9c6d1fd7d2f94ad05c7d98b23da7d65609a6d8a54a3b50c72 527562792020202020204f70616c202020202020546f70617a2020202020456d6572616c64202020417175616d6172696e6553617070686972652020416d657468797374202058656e747572696f6e204c696d6974656420202052617265202020202020457069632020202020204c6567656e646172792045786f7469632020202058756e69636f726e2020\n\n    auxdata: 0xa2646970667358221220eaaab9a6ffe203b061c23d86fb05b69150cc79c71a8e7c124839e444bbf5669064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61079b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c8063831b46a111610065578063831b46a1146100d75780638e2196ed146100ea578063b0eca69b146100f2578063e0beab2d1461010557600080fd5b806302c1a14c14610097578063192a63ed146100b25780633a24b8ef146100ba57806348b25502146100cf575b600080fd5b61009f600a81565b6040519081526020015b60405180910390f35b61009f600c81565b6100c261010d565b6040516100a991906102b3565b61009f604281565b6100c26100e53660046102c6565b61012c565b61009f600e81565b6100c26101003660046102c6565b6101fd565b6100c2610251565b60405180610340016040528061031881526020016103c2610318913981565b606061013a6001600c610354565b82111561018c5761014f60426000858761036d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506101f692505050565b8383610199604285610397565b9060426101a78660016103ae565b6101b19190610397565b926101be9392919061036d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b9392505050565b6060600e82101561023a578383610215600a85610397565b90600a6102238660016103ae565b61022d9190610397565b9261014f9392919061036d565b506040805160208101909152600081529392505050565b6040518060c00160405280608c81526020016106da608c913981565b6000815180845260005b8181101561029357602081850181015186830182015201610277565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006101f6602083018461026d565b6000806000604084860312156102db57600080fd5b833567ffffffffffffffff808211156102f357600080fd5b818601915086601f83011261030757600080fd5b81358181111561031657600080fd5b87602082850101111561032857600080fd5b6020928301989097509590910135949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103675761036761033e565b92915050565b6000808585111561037d57600080fd5b8386111561038a57600080fd5b5050820193919092039150565b80820281158282048414176103675761036761033e565b808201808211156103675761036761033e56fe22546865206d696e642069732065766572797468696e672e205768617420796f75207468696e6b2c20796f75206265636f6d652e222d2042756461202020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c6120224661696c75726573206172652073696d706c7920737465707320746f77617264732073756363657373222e2d20456c6f6e204d75736b2e2020202020202020202022546865206f6e6c792077617920746f20646f20677265617420776f726b20697320746f206c6f7665207768617420796f7520646f2e222d5374657665204a6f6273224861747265642063616e206f6e6c79206265206f766572636f6d65206279206c6f76652e222d2042756461202020202020202020202020202020202020202020202253696d706c69636974792069732074686520756c74696d61746520736f706869737469636174696f6e2e22202d4c656f6e6172646f2064612056696e63692e202022426520746865206368616e676520796f75207769736820746f2073656520696e2074686520776f726c642e222d4d616861746d612047616e6468692e202020202022437572696f73697479206973206d6f726520696d706f7274616e74207468616e206b6e6f776c656467652e22202d20416c626572742045696e737465696e202020225468657265206973206e6f207061746820746f2068617070696e6573733a68617070696e6573732069732074686520706174682e222d20427564612020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c612022506561636520636f6d65732066726f6d2077697468696e2e20446f206e6f74207365656b20697420776974686f75742e222d2042756461202020202020202020202241206d616e206d757374206c6561726e20746f207361696c20696e207374726f6e672077696e64732e22202d20456c6f6e204d75736b2e20202020202020202020527562792020202020204f70616c202020202020546f70617a2020202020456d6572616c64202020417175616d6172696e6553617070686972652020416d657468797374202058656e747572696f6e204c696d6974656420202052617265202020202020457069632020202020204c6567656e646172792045786f7469632020202058756e69636f726e2020a2646970667358221220eaaab9a6ffe203b061c23d86fb05b69150cc79c71a8e7c124839e444bbf5669064736f6c63430008120033",
							"opcodes": "PUSH2 0x79B PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x831B46A1 GT PUSH2 0x65 JUMPI DUP1 PUSH4 0x831B46A1 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x8E2196ED EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xB0ECA69B EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xE0BEAB2D EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C1A14C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x192A63ED EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x3A24B8EF EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x48B25502 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0xC DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x9F PUSH1 0x42 DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH2 0x9F PUSH1 0xE DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x340 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x318 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C2 PUSH2 0x318 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13A PUSH1 0x1 PUSH1 0xC PUSH2 0x354 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x18C JUMPI PUSH2 0x14F PUSH1 0x42 PUSH1 0x0 DUP6 DUP8 PUSH2 0x36D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x1F6 SWAP3 POP POP POP JUMP JUMPDEST DUP4 DUP4 PUSH2 0x199 PUSH1 0x42 DUP6 PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0x42 PUSH2 0x1A7 DUP7 PUSH1 0x1 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST SWAP3 PUSH2 0x1BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP3 LT ISZERO PUSH2 0x23A JUMPI DUP4 DUP4 PUSH2 0x215 PUSH1 0xA DUP6 PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0xA PUSH2 0x223 DUP7 PUSH1 0x1 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST SWAP3 PUSH2 0x14F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DA PUSH1 0x8C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x277 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0x33E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0x33E JUMP INVALID 0x22 SLOAD PUSH9 0x65206D696E64206973 KECCAK256 PUSH6 0x766572797468 PUSH10 0x6E672E20576861742079 PUSH16 0x75207468696E6B2C20796F7520626563 PUSH16 0x6D652E222D2042756461202020202020 KECCAK256 0x22 JUMPI PUSH9 0x617420776520617265 KECCAK256 PUSH10 0x73207468652072657375 PUSH13 0x74206F66207768617420776520 PUSH9 0x6176652074686F7567 PUSH9 0x742E222D4E696B6F6C PUSH2 0x2054 PUSH6 0x736C61202246 PUSH2 0x696C PUSH22 0x726573206172652073696D706C792073746570732074 PUSH16 0x77617264732073756363657373222E2D KECCAK256 GASLIMIT PUSH13 0x6F6E204D75736B2E2020202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 0x22 SLOAD PUSH9 0x65206F6E6C79207761 PUSH26 0x20746F20646F20677265617420776F726B20697320746F206C6F PUSH23 0x65207768617420796F7520646F2E222D5374657665204A PUSH16 0x6273224861747265642063616E206F6E PUSH13 0x79206265206F766572636F6D65 KECCAK256 PUSH3 0x79206C PUSH16 0x76652E222D2042756461202020202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 0x22 MSTORE8 PUSH10 0x6D706C69636974792069 PUSH20 0x2074686520756C74696D61746520736F70686973 PUSH21 0x69636174696F6E2E22202D4C656F6E6172646F2064 PUSH2 0x2056 PUSH10 0x6E63692E202022426520 PUSH21 0x6865206368616E676520796F75207769736820746F KECCAK256 PUSH20 0x656520696E2074686520776F726C642E222D4D61 PUSH9 0x61746D612047616E64 PUSH9 0x692E20202020202243 PUSH22 0x72696F73697479206973206D6F726520696D706F7274 PUSH2 0x6E74 KECCAK256 PUSH21 0x68616E206B6E6F776C656467652E22202D20416C62 PUSH6 0x72742045696E PUSH20 0x7465696E202020225468657265206973206E6F20 PUSH17 0x61746820746F2068617070696E6573733A PUSH9 0x617070696E65737320 PUSH10 0x73207468652070617468 0x2E 0x22 0x2D KECCAK256 TIMESTAMP PUSH22 0x64612020202020202257686174207765206172652069 PUSH20 0x2074686520726573756C74206F66207768617420 PUSH24 0x6520686176652074686F756768742E222D4E696B6F6C6120 SLOAD PUSH6 0x736C61202250 PUSH6 0x61636520636F PUSH14 0x65732066726F6D2077697468696E 0x2E KECCAK256 PREVRANDAO PUSH16 0x206E6F74207365656B20697420776974 PUSH9 0x6F75742E222D204275 PUSH5 0x6120202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 0x22 COINBASE KECCAK256 PUSH14 0x616E206D757374206C6561726E20 PUSH21 0x6F207361696C20696E207374726F6E672077696E64 PUSH20 0x2E22202D20456C6F6E204D75736B2E2020202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 MSTORE PUSH22 0x62792020202020204F70616C202020202020546F7061 PUSH27 0x2020202020456D6572616C64202020417175616D6172696E655361 PUSH17 0x70686972652020416D6574687973742020 PC PUSH6 0x6E747572696F PUSH15 0x204C696D6974656420202052617265 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 GASLIMIT PUSH17 0x69632020202020204C6567656E64617279 KECCAK256 GASLIMIT PUSH25 0x6F7469632020202058756E69636F726E2020A2646970667358 0x22 SLT KECCAK256 0xEA 0xAA 0xB9 0xA6 SELFDESTRUCT 0xE2 SUB 0xB0 PUSH2 0xC23D DUP7 0xFB SDIV 0xB6 SWAP2 POP 0xCC PUSH26 0xC71A8E7C124839E444BBF5669064736F6C634300081200330000 ",
							"sourceMap": "1453:2481:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1453:2481:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CLASSES_26": {
									"entryPoint": 593,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CLASSES_COUNT_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CLASSES_NAME_LENGTH_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@QUOTES_14": {
									"entryPoint": 269,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@QUOTES_COUNT_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@QUOTE_LENGTH_8": {
									"entryPoint": null,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getClassName_97": {
									"entryPoint": 509,
									"id": 97,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getQuote_66": {
									"entryPoint": 300,
									"id": 66,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_uint256": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_bytes": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2664:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "123:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "133:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "145:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "141:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "141:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "133:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "175:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "186:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "168:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "168:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "92:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "103:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "114:4:1",
														"type": ""
													}
												],
												"src": "14:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "253:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "263:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "277:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "267:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "305:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "310:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "298:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "326:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "335:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "330:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "397:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "411:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "421:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "415:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "453:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "458:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "449:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "449:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "462:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "445:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "445:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "481:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "488:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "477:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "477:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "492:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "473:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "473:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "467:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "467:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "438:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "438:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "438:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "356:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "359:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "367:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "369:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "378:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "381:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "374:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "369:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "349:3:1",
																"statements": []
															},
															"src": "345:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "531:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "536:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "527:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "527:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "545:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "563:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "578:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "591:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "599:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "587:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "587:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "608:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "604:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "604:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "583:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "583:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "615:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "230:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "237:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "245:3:1",
														"type": ""
													}
												],
												"src": "204:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "775:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "768:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "768:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "798:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "823:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "835:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "846:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "831:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "831:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "806:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "798:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "727:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "738:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "749:4:1",
														"type": ""
													}
												],
												"src": "631:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:559:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1013:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1022:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1025:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1015:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1015:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1015:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "988:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "997:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "984:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1009:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:32:1"
															},
															"nodeType": "YulIf",
															"src": "977:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1038:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1065:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1052:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1042:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1084:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1094:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1088:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1139:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1148:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1141:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1141:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1141:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1127:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1135:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:14:1"
															},
															"nodeType": "YulIf",
															"src": "1121:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1164:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1178:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1189:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1174:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1168:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1244:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1253:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1246:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1246:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1246:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1223:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1227:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1219:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1219:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1234:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1215:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:35:1"
															},
															"nodeType": "YulIf",
															"src": "1205:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1269:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1296:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1283:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:16:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1273:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1335:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1338:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1328:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1314:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1322:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1311:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:14:1"
															},
															"nodeType": "YulIf",
															"src": "1308:34:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1394:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1403:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1406:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1396:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1396:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1396:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1365:2:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1361:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1361:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1378:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1357:26:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1385:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:39:1"
															},
															"nodeType": "YulIf",
															"src": "1351:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1419:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1433:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1437:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:13:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1451:16:1",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1461:6:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1476:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:20:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1486:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:34:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1476:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "917:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "928:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "940:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "948:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "956:6:1",
														"type": ""
													}
												],
												"src": "861:665:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1660:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1677:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1670:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1670:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1700:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1725:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1748:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1733:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1708:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1700:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1629:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1651:4:1",
														"type": ""
													}
												],
												"src": "1531:227:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1812:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1819:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1824:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1805:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1845:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1879:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1763:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1944:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1954:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1966:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1969:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1962:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1954:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1995:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1997:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1997:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1997:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "1986:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1992:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:11:1"
															},
															"nodeType": "YulIf",
															"src": "1980:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1926:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1929:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1935:4:1",
														"type": ""
													}
												],
												"src": "1895:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2158:201:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2196:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2205:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2198:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2198:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2198:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "2174:10:1"
																	},
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "2186:8:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2171:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:24:1"
															},
															"nodeType": "YulIf",
															"src": "2168:44:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2245:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2254:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2257:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2247:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2247:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2247:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "2227:8:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2237:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:20:1"
															},
															"nodeType": "YulIf",
															"src": "2221:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2270:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2287:6:1"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "2295:10:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:23:1"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nodeType": "YulIdentifier",
																	"src": "2270:9:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2315:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "2332:8:1"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "2342:10:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:25:1"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nodeType": "YulIdentifier",
																	"src": "2315:9:1"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2092:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2100:6:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2108:10:1",
														"type": ""
													},
													{
														"name": "endIndex",
														"nodeType": "YulTypedName",
														"src": "2120:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nodeType": "YulTypedName",
														"src": "2133:9:1",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nodeType": "YulTypedName",
														"src": "2144:9:1",
														"type": ""
													}
												],
												"src": "2028:331:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2426:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2441:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2444:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2437:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2437:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2426:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2504:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2506:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2506:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2506:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2475:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2468:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2468:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2482:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2489:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2498:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2485:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2485:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2479:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2479:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2465:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2465:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:45:1"
															},
															"nodeType": "YulIf",
															"src": "2455:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2395:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2398:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2404:7:1",
														"type": ""
													}
												],
												"src": "2364:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2585:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2595:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2606:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2609:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2602:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2602:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2595:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2634:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2636:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2636:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2636:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2626:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2629:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2623:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:10:1"
															},
															"nodeType": "YulIf",
															"src": "2620:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2568:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2571:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2577:3:1",
														"type": ""
													}
												],
												"src": "2537:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c8063831b46a111610065578063831b46a1146100d75780638e2196ed146100ea578063b0eca69b146100f2578063e0beab2d1461010557600080fd5b806302c1a14c14610097578063192a63ed146100b25780633a24b8ef146100ba57806348b25502146100cf575b600080fd5b61009f600a81565b6040519081526020015b60405180910390f35b61009f600c81565b6100c261010d565b6040516100a991906102b3565b61009f604281565b6100c26100e53660046102c6565b61012c565b61009f600e81565b6100c26101003660046102c6565b6101fd565b6100c2610251565b60405180610340016040528061031881526020016103c2610318913981565b606061013a6001600c610354565b82111561018c5761014f60426000858761036d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506101f692505050565b8383610199604285610397565b9060426101a78660016103ae565b6101b19190610397565b926101be9392919061036d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b9392505050565b6060600e82101561023a578383610215600a85610397565b90600a6102238660016103ae565b61022d9190610397565b9261014f9392919061036d565b506040805160208101909152600081529392505050565b6040518060c00160405280608c81526020016106da608c913981565b6000815180845260005b8181101561029357602081850181015186830182015201610277565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006101f6602083018461026d565b6000806000604084860312156102db57600080fd5b833567ffffffffffffffff808211156102f357600080fd5b818601915086601f83011261030757600080fd5b81358181111561031657600080fd5b87602082850101111561032857600080fd5b6020928301989097509590910135949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103675761036761033e565b92915050565b6000808585111561037d57600080fd5b8386111561038a57600080fd5b5050820193919092039150565b80820281158282048414176103675761036761033e565b808201808211156103675761036761033e56fe22546865206d696e642069732065766572797468696e672e205768617420796f75207468696e6b2c20796f75206265636f6d652e222d2042756461202020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c6120224661696c75726573206172652073696d706c7920737465707320746f77617264732073756363657373222e2d20456c6f6e204d75736b2e2020202020202020202022546865206f6e6c792077617920746f20646f20677265617420776f726b20697320746f206c6f7665207768617420796f7520646f2e222d5374657665204a6f6273224861747265642063616e206f6e6c79206265206f766572636f6d65206279206c6f76652e222d2042756461202020202020202020202020202020202020202020202253696d706c69636974792069732074686520756c74696d61746520736f706869737469636174696f6e2e22202d4c656f6e6172646f2064612056696e63692e202022426520746865206368616e676520796f75207769736820746f2073656520696e2074686520776f726c642e222d4d616861746d612047616e6468692e202020202022437572696f73697479206973206d6f726520696d706f7274616e74207468616e206b6e6f776c656467652e22202d20416c626572742045696e737465696e202020225468657265206973206e6f207061746820746f2068617070696e6573733a68617070696e6573732069732074686520706174682e222d20427564612020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c612022506561636520636f6d65732066726f6d2077697468696e2e20446f206e6f74207365656b20697420776974686f75742e222d2042756461202020202020202020202241206d616e206d757374206c6561726e20746f207361696c20696e207374726f6e672077696e64732e22202d20456c6f6e204d75736b2e20202020202020202020527562792020202020204f70616c202020202020546f70617a2020202020456d6572616c64202020417175616d6172696e6553617070686972652020416d657468797374202058656e747572696f6e204c696d6974656420202052617265202020202020457069632020202020204c6567656e646172792045786f7469632020202058756e69636f726e2020a2646970667358221220eaaab9a6ffe203b061c23d86fb05b69150cc79c71a8e7c124839e444bbf5669064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x831B46A1 GT PUSH2 0x65 JUMPI DUP1 PUSH4 0x831B46A1 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x8E2196ED EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xB0ECA69B EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xE0BEAB2D EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C1A14C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x192A63ED EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x3A24B8EF EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x48B25502 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0xC DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x9F PUSH1 0x42 DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH2 0x9F PUSH1 0xE DUP2 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x340 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x318 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C2 PUSH2 0x318 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13A PUSH1 0x1 PUSH1 0xC PUSH2 0x354 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x18C JUMPI PUSH2 0x14F PUSH1 0x42 PUSH1 0x0 DUP6 DUP8 PUSH2 0x36D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP PUSH2 0x1F6 SWAP3 POP POP POP JUMP JUMPDEST DUP4 DUP4 PUSH2 0x199 PUSH1 0x42 DUP6 PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0x42 PUSH2 0x1A7 DUP7 PUSH1 0x1 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST SWAP3 PUSH2 0x1BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP3 LT ISZERO PUSH2 0x23A JUMPI DUP4 DUP4 PUSH2 0x215 PUSH1 0xA DUP6 PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0xA PUSH2 0x223 DUP7 PUSH1 0x1 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST SWAP3 PUSH2 0x14F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6DA PUSH1 0x8C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x277 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0x33E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x367 JUMPI PUSH2 0x367 PUSH2 0x33E JUMP INVALID 0x22 SLOAD PUSH9 0x65206D696E64206973 KECCAK256 PUSH6 0x766572797468 PUSH10 0x6E672E20576861742079 PUSH16 0x75207468696E6B2C20796F7520626563 PUSH16 0x6D652E222D2042756461202020202020 KECCAK256 0x22 JUMPI PUSH9 0x617420776520617265 KECCAK256 PUSH10 0x73207468652072657375 PUSH13 0x74206F66207768617420776520 PUSH9 0x6176652074686F7567 PUSH9 0x742E222D4E696B6F6C PUSH2 0x2054 PUSH6 0x736C61202246 PUSH2 0x696C PUSH22 0x726573206172652073696D706C792073746570732074 PUSH16 0x77617264732073756363657373222E2D KECCAK256 GASLIMIT PUSH13 0x6F6E204D75736B2E2020202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 0x22 SLOAD PUSH9 0x65206F6E6C79207761 PUSH26 0x20746F20646F20677265617420776F726B20697320746F206C6F PUSH23 0x65207768617420796F7520646F2E222D5374657665204A PUSH16 0x6273224861747265642063616E206F6E PUSH13 0x79206265206F766572636F6D65 KECCAK256 PUSH3 0x79206C PUSH16 0x76652E222D2042756461202020202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 0x22 MSTORE8 PUSH10 0x6D706C69636974792069 PUSH20 0x2074686520756C74696D61746520736F70686973 PUSH21 0x69636174696F6E2E22202D4C656F6E6172646F2064 PUSH2 0x2056 PUSH10 0x6E63692E202022426520 PUSH21 0x6865206368616E676520796F75207769736820746F KECCAK256 PUSH20 0x656520696E2074686520776F726C642E222D4D61 PUSH9 0x61746D612047616E64 PUSH9 0x692E20202020202243 PUSH22 0x72696F73697479206973206D6F726520696D706F7274 PUSH2 0x6E74 KECCAK256 PUSH21 0x68616E206B6E6F776C656467652E22202D20416C62 PUSH6 0x72742045696E PUSH20 0x7465696E202020225468657265206973206E6F20 PUSH17 0x61746820746F2068617070696E6573733A PUSH9 0x617070696E65737320 PUSH10 0x73207468652070617468 0x2E 0x22 0x2D KECCAK256 TIMESTAMP PUSH22 0x64612020202020202257686174207765206172652069 PUSH20 0x2074686520726573756C74206F66207768617420 PUSH24 0x6520686176652074686F756768742E222D4E696B6F6C6120 SLOAD PUSH6 0x736C61202250 PUSH6 0x61636520636F PUSH14 0x65732066726F6D2077697468696E 0x2E KECCAK256 PREVRANDAO PUSH16 0x206E6F74207365656B20697420776974 PUSH9 0x6F75742E222D204275 PUSH5 0x6120202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 0x22 COINBASE KECCAK256 PUSH14 0x616E206D757374206C6561726E20 PUSH21 0x6F207361696C20696E207374726F6E672077696E64 PUSH20 0x2E22202D20456C6F6E204D75736B2E2020202020 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 MSTORE PUSH22 0x62792020202020204F70616C202020202020546F7061 PUSH27 0x2020202020456D6572616C64202020417175616D6172696E655361 PUSH17 0x70686972652020416D6574687973742020 PC PUSH6 0x6E747572696F PUSH15 0x204C696D6974656420202052617265 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 KECCAK256 GASLIMIT PUSH17 0x69632020202020204C6567656E64617279 KECCAK256 GASLIMIT PUSH25 0x6F7469632020202058756E69636F726E2020A2646970667358 0x22 SLT KECCAK256 0xEA 0xAA 0xB9 0xA6 SELFDESTRUCT 0xE2 SUB 0xB0 PUSH2 0xC23D DUP7 0xFB SDIV 0xB6 SWAP2 POP 0xCC PUSH26 0xC71A8E7C124839E444BBF5669064736F6C634300081200330000 ",
							"sourceMap": "1453:2481:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:48;;2754:2;2708:48;;;;;168:25:1;;;156:2;141:18;2708:48:0;;;;;;;;1479:41;;1518:2;1479:41;;1575:1041;;;:::i;:::-;;;;;;;:::i;1527:41::-;;1566:2;1527:41;;3416:261;;;;;;:::i;:::-;;:::i;2659:42::-;;2699:2;2659:42;;3685:246;;;;;;:::i;:::-;;:::i;2763:422::-;;;:::i;1575:1041::-;1615:1001;;;;;;;;;;;;;;;;;1575:1041;:::o;3416:261::-;3495:13;3533:16;3548:1;1518:2;3533:16;:::i;:::-;3525:5;:24;3521:67;;;3565:22;1566:2;3572:1;3565:6;;:22;:::i;:::-;3551:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3551:37:0;;-1:-1:-1;3551:37:0;;-1:-1:-1;;;3551:37:0;3521:67;3613:6;;3620:20;1566:2;3620:5;:20;:::i;:::-;3613:55;1566:2;3642:9;:5;3650:1;3642:9;:::i;:::-;3641:26;;;;:::i;:::-;3613:55;;;;;;;:::i;:::-;3599:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3599:70:0;;-1:-1:-1;;;;3416:261:0;;;;;;:::o;3685:246::-;3767:13;2699:2;3797:5;:21;3793:110;;;3834:5;;3840:27;2754:2;3840:5;:27;:::i;:::-;3834:68;2754:2;3869:9;:5;3877:1;3869:9;:::i;:::-;3868:33;;;;:::i;:::-;3834:68;;;;;;;:::i;3793:110::-;-1:-1:-1;3914:9:0;;;;;;;;;-1:-1:-1;3914:9:0;;3685:246;;;;;:::o;2763:422::-;2804:381;;;;;;;;;;;;;;;;;2763:422;:::o;204::1:-;245:3;283:5;277:12;310:6;305:3;298:19;335:1;345:162;359:6;356:1;353:13;345:162;;;421:4;477:13;;;473:22;;467:29;449:11;;;445:20;;438:59;374:12;345:162;;;349:3;552:1;545:4;536:6;531:3;527:16;523:27;516:38;615:4;608:2;604:7;599:2;591:6;587:15;583:29;578:3;574:39;570:50;563:57;;;204:422;;;;:::o;631:225::-;786:2;775:9;768:21;749:4;806:44;846:2;835:9;831:18;823:6;806:44;:::i;861:665::-;940:6;948;956;1009:2;997:9;988:7;984:23;980:32;977:52;;;1025:1;1022;1015:12;977:52;1065:9;1052:23;1094:18;1135:2;1127:6;1124:14;1121:34;;;1151:1;1148;1141:12;1121:34;1189:6;1178:9;1174:22;1164:32;;1234:7;1227:4;1223:2;1219:13;1215:27;1205:55;;1256:1;1253;1246:12;1205:55;1296:2;1283:16;1322:2;1314:6;1311:14;1308:34;;;1338:1;1335;1328:12;1308:34;1385:7;1378:4;1369:6;1365:2;1361:15;1357:26;1354:39;1351:59;;;1406:1;1403;1396:12;1351:59;1437:4;1429:13;;;;1461:6;;-1:-1:-1;1499:20:1;;;;1486:34;;861:665;-1:-1:-1;;;;861:665:1:o;1763:127::-;1824:10;1819:3;1815:20;1812:1;1805:31;1855:4;1852:1;1845:15;1879:4;1876:1;1869:15;1895:128;1962:9;;;1983:11;;;1980:37;;;1997:18;;:::i;:::-;1895:128;;;;:::o;2028:331::-;2133:9;2144;2186:8;2174:10;2171:24;2168:44;;;2208:1;2205;2198:12;2168:44;2237:6;2227:8;2224:20;2221:40;;;2257:1;2254;2247:12;2221:40;-1:-1:-1;;2283:23:1;;;2328:25;;;;;-1:-1:-1;2028:331:1:o;2364:168::-;2437:9;;;2468;;2485:15;;;2479:22;;2465:37;2455:71;;2506:18;;:::i;2537:125::-;2602:9;;;2623:10;;;2620:36;;;2636:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "389400",
								"executionCost": "458",
								"totalCost": "389858"
							},
							"external": {
								"CLASSES()": "infinite",
								"CLASSES_COUNT()": "190",
								"CLASSES_NAME_LENGTH()": "169",
								"QUOTES()": "infinite",
								"QUOTES_COUNT()": "191",
								"QUOTE_LENGTH()": "235",
								"getClassName(bytes,uint256)": "infinite",
								"getQuote(bytes,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 3934,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eaaab9a6ffe203b061c23d86fb05b69150cc79c71a8e7c124839e444bbf5669064736f6c63430008120033",
									".code": [
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "831B46A1"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "831B46A1"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "8E2196ED"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "B0ECA69B"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "E0BEAB2D"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "2C1A14C"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "192A63ED"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "3A24B8EF"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "48B25502"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 3934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 168,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 168,
											"end": 193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 156,
											"end": 158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 141,
											"end": 159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2756,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1479,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1479,
											"end": 1520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1575,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1575,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1568,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1527,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1527,
											"end": 1568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1568,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3416,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3416,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2659,
											"end": 2701,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3685,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3685,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 3185,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2763,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2763,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2763,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "PUSH data",
											"source": 0,
											"value": "30C01EF9EFA2DDB7BCE50464F03E565BA8D42727A8DFC2F58AC6D55D398A452A"
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 2616,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3508,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3548,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3533,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3533,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3525,
											"end": 3549,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3521,
											"end": 3588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3521,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3521,
											"end": 3588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3565,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3565,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3588,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3521,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3521,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3620,
											"end": 3625,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3620,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3640,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3620,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3642,
											"end": 3647,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3642,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3641,
											"end": 3667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3641,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3667,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3641,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3613,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3613,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3669,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3780,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3793,
											"end": 3903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3793,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3793,
											"end": 3903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3840,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3840,
											"end": 3845,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3840,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3840,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3840,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3840,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3869,
											"end": 3874,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3878,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3869,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3869,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3868,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3868,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3834,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3793,
											"end": 3903,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3793,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 3185,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2763,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "8C"
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "PUSH data",
											"source": 0,
											"value": "7AFDAEF82DEE11B9C6D1FD7D2F94AD05C7D98B23DA7D65609A6D8A54A3B50C72"
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "8C"
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 3185,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 3185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 3185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 626,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 204,
											"end": 626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 245,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 277,
											"end": 289,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 298,
											"end": 317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 345,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 353,
											"end": 366,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 345,
											"end": 507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 345,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 345,
											"end": 507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 490,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 477,
											"end": 490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 473,
											"end": 495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 438,
											"end": 497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 374,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 345,
											"end": 507,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 507,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 345,
											"end": 507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 349,
											"end": 352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 531,
											"end": 534,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 527,
											"end": 543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 523,
											"end": 550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 604,
											"end": 611,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 599,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 591,
											"end": 597,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 587,
											"end": 602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 578,
											"end": 581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 574,
											"end": 613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 563,
											"end": 620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 563,
											"end": 620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 563,
											"end": 620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 204,
											"end": 626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 631,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 768,
											"end": 789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 749,
											"end": 753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 846,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 831,
											"end": 849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 806,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 806,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 861,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 861,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 988,
											"end": 995,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1012,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1029,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 977,
											"end": 1029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1027,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1029,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 977,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1075,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1187,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1205,
											"end": 1260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1258,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1205,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1299,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1325,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1342,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1308,
											"end": 1342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1342,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1308,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1393,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1351,
											"end": 1410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1408,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1410,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1351,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1520,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1520,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 861,
											"end": 1526,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 861,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1763,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1819,
											"end": 1822,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1815,
											"end": 1835,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1884,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2023,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1895,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1994,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2017,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1980,
											"end": 2017,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1997,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1997,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2359,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2028,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2194,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2184,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2195,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2212,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2168,
											"end": 2212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2210,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2212,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2168,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2221,
											"end": 2261,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2259,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2261,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2221,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2306,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2353,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2532,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2364,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2477,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2500,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2501,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2502,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2455,
											"end": 2526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2506,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2506,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2662,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2537,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2633,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2620,
											"end": 2656,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2636,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2636,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"30C01EF9EFA2DDB7BCE50464F03E565BA8D42727A8DFC2F58AC6D55D398A452A": "22546865206d696e642069732065766572797468696e672e205768617420796f75207468696e6b2c20796f75206265636f6d652e222d2042756461202020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c6120224661696c75726573206172652073696d706c7920737465707320746f77617264732073756363657373222e2d20456c6f6e204d75736b2e2020202020202020202022546865206f6e6c792077617920746f20646f20677265617420776f726b20697320746f206c6f7665207768617420796f7520646f2e222d5374657665204a6f6273224861747265642063616e206f6e6c79206265206f766572636f6d65206279206c6f76652e222d2042756461202020202020202020202020202020202020202020202253696d706c69636974792069732074686520756c74696d61746520736f706869737469636174696f6e2e22202d4c656f6e6172646f2064612056696e63692e202022426520746865206368616e676520796f75207769736820746f2073656520696e2074686520776f726c642e222d4d616861746d612047616e6468692e202020202022437572696f73697479206973206d6f726520696d706f7274616e74207468616e206b6e6f776c656467652e22202d20416c626572742045696e737465696e202020225468657265206973206e6f207061746820746f2068617070696e6573733a68617070696e6573732069732074686520706174682e222d20427564612020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c612022506561636520636f6d65732066726f6d2077697468696e2e20446f206e6f74207365656b20697420776974686f75742e222d2042756461202020202020202020202241206d616e206d757374206c6561726e20746f207361696c20696e207374726f6e672077696e64732e22202d20456c6f6e204d75736b2e20202020202020202020",
										"7AFDAEF82DEE11B9C6D1FD7D2F94AD05C7D98B23DA7D65609A6D8A54A3B50C72": "527562792020202020204f70616c202020202020546f70617a2020202020456d6572616c64202020417175616d6172696e6553617070686972652020416d657468797374202058656e747572696f6e204c696d6974656420202052617265202020202020457069632020202020204c6567656e646172792045786f7469632020202058756e69636f726e2020"
									}
								}
							},
							"sourceList": [
								"XENFT/StringData.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CLASSES()": "e0beab2d",
							"CLASSES_COUNT()": "8e2196ed",
							"CLASSES_NAME_LENGTH()": "02c1a14c",
							"QUOTES()": "3a24b8ef",
							"QUOTES_COUNT()": "192a63ed",
							"QUOTE_LENGTH()": "48b25502",
							"getClassName(bytes,uint256)": "b0eca69b",
							"getQuote(bytes,uint256)": "831b46a1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLASSES\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLASSES_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLASSES_NAME_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTES\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTES_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTE_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"names\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getClassName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"quotes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"a library to supply a XEN string data based on params\",\"kind\":\"dev\",\"methods\":{\"getQuote(bytes,uint256)\":{\"details\":\"Solidity doesn't yet support slicing of byte arrays anywhere outside of calldata, therefore we make a hack by supplying our local constant packed string array as calldata\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"XENFT/StringData.sol\":\"StringData\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"XENFT/StringData.sol\":{\"keccak256\":\"0x81c722b8bd1ba4728b10ab3fd70bc3c4688f94f879c55057b658d8c18eaa8816\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80284639e8a0e685a3b3925d38cf90516d86c3175a902e1465d2693e99feddcc\",\"dweb:/ipfs/QmXCD5ARxLF95JqjSa1b9wAYRKWwWh9UiyJRTtHxKAwWg5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"XENFT/StringData.sol": {
				"ast": {
					"absolutePath": "XENFT/StringData.sol",
					"exportedSymbols": {
						"StringData": [
							98
						]
					},
					"id": 99,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringData",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "1380:71:0",
								"text": "@dev  a library to supply a XEN string data based on params"
							},
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "StringData",
							"nameLocation": "1461:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "192a63ed",
									"id": 5,
									"mutability": "constant",
									"name": "QUOTES_COUNT",
									"nameLocation": "1503:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "1479:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1479:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1518:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "48b25502",
									"id": 8,
									"mutability": "constant",
									"name": "QUOTE_LENGTH",
									"nameLocation": "1551:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "1527:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1527:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3636",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1566:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_66_by_1",
											"typeString": "int_const 66"
										},
										"value": "66"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3a24b8ef",
									"id": 14,
									"mutability": "constant",
									"name": "QUOTES",
									"nameLocation": "1597:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "1575:1041:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_memory_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 9,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1575:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "22546865206d696e642069732065766572797468696e672e205768617420796f75207468696e6b2c20796f75206265636f6d652e222d2042756461202020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c6120224661696c75726573206172652073696d706c7920737465707320746f77617264732073756363657373222e2d20456c6f6e204d75736b2e2020202020202020202022546865206f6e6c792077617920746f20646f20677265617420776f726b20697320746f206c6f7665207768617420796f7520646f2e222d5374657665204a6f6273224861747265642063616e206f6e6c79206265206f766572636f6d65206279206c6f76652e222d2042756461202020202020202020202020202020202020202020202253696d706c69636974792069732074686520756c74696d61746520736f706869737469636174696f6e2e22202d4c656f6e6172646f2064612056696e63692e202022426520746865206368616e676520796f75207769736820746f2073656520696e2074686520776f726c642e222d4d616861746d612047616e6468692e202020202022437572696f73697479206973206d6f726520696d706f7274616e74207468616e206b6e6f776c656467652e22202d20416c626572742045696e737465696e202020225468657265206973206e6f207061746820746f2068617070696e6573733a68617070696e6573732069732074686520706174682e222d20427564612020202020202257686174207765206172652069732074686520726573756c74206f66207768617420776520686176652074686f756768742e222d4e696b6f6c61205465736c612022506561636520636f6d65732066726f6d2077697468696e2e20446f206e6f74207365656b20697420776974686f75742e222d2042756461202020202020202020202241206d616e206d757374206c6561726e20746f207361696c20696e207374726f6e672077696e64732e22202d20456c6f6e204d75736b2e20202020202020202020",
												"id": 12,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1635:970:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_30c01ef9efa2ddb7bce50464f03e565ba8d42727a8dfc2f58ac6d55d398a452a",
													"typeString": "literal_string \"\"The mind is everything. What you think, you become.\"- Buda       \"What we are is the result of what we have thought.\"-Nikola Tesla \"Failures are simply steps towards success\".- Elon Musk.          \"The only way to do great work is to love what you do.\"-Steve Jobs\"Hatred can only be overcome by love.\"- Buda                      \"Simplicity is the ultimate sophistication.\" -Leonardo da Vinci.  \"Be the change you wish to see in the world.\"-Mahatma Gandhi.     \"Curiosity is more important than knowledge.\" - Albert Einstein   \"There is no path to happiness:happiness is the path.\"- Buda      \"What we are is the result of what we have thought.\"-Nikola Tesla \"Peace comes from within. Do not seek it without.\"- Buda          \"A man must learn to sail in strong winds.\" - Elon Musk.          \""
												},
												"value": "\"The mind is everything. What you think, you become.\"- Buda       \"What we are is the result of what we have thought.\"-Nikola Tesla \"Failures are simply steps towards success\".- Elon Musk.          \"The only way to do great work is to love what you do.\"-Steve Jobs\"Hatred can only be overcome by love.\"- Buda                      \"Simplicity is the ultimate sophistication.\" -Leonardo da Vinci.  \"Be the change you wish to see in the world.\"-Mahatma Gandhi.     \"Curiosity is more important than knowledge.\" - Albert Einstein   \"There is no path to happiness:happiness is the path.\"- Buda      \"What we are is the result of what we have thought.\"-Nikola Tesla \"Peace comes from within. Do not seek it without.\"- Buda          \"A man must learn to sail in strong winds.\" - Elon Musk.          "
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_30c01ef9efa2ddb7bce50464f03e565ba8d42727a8dfc2f58ac6d55d398a452a",
													"typeString": "literal_string \"\"The mind is everything. What you think, you become.\"- Buda       \"What we are is the result of what we have thought.\"-Nikola Tesla \"Failures are simply steps towards success\".- Elon Musk.          \"The only way to do great work is to love what you do.\"-Steve Jobs\"Hatred can only be overcome by love.\"- Buda                      \"Simplicity is the ultimate sophistication.\" -Leonardo da Vinci.  \"Be the change you wish to see in the world.\"-Mahatma Gandhi.     \"Curiosity is more important than knowledge.\" - Albert Einstein   \"There is no path to happiness:happiness is the path.\"- Buda      \"What we are is the result of what we have thought.\"-Nikola Tesla \"Peace comes from within. Do not seek it without.\"- Buda          \"A man must learn to sail in strong winds.\" - Elon Musk.          \""
												}
											],
											"id": 11,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1615:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
												"typeString": "type(bytes storage pointer)"
											},
											"typeName": {
												"id": 10,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1615:5:0",
												"typeDescriptions": {}
											}
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1615:1001:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_memory_ptr",
											"typeString": "bytes memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8e2196ed",
									"id": 17,
									"mutability": "constant",
									"name": "CLASSES_COUNT",
									"nameLocation": "2683:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "2659:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2659:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3134",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2699:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_14_by_1",
											"typeString": "int_const 14"
										},
										"value": "14"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "02c1a14c",
									"id": 20,
									"mutability": "constant",
									"name": "CLASSES_NAME_LENGTH",
									"nameLocation": "2732:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "2708:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2754:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e0beab2d",
									"id": 26,
									"mutability": "constant",
									"name": "CLASSES",
									"nameLocation": "2785:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "2763:422:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_memory_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 21,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "2763:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "527562792020202020204f70616c202020202020546f70617a2020202020456d6572616c64202020417175616d6172696e6553617070686972652020416d657468797374202058656e747572696f6e204c696d6974656420202052617265202020202020457069632020202020204c6567656e646172792045786f7469632020202058756e69636f726e2020",
												"id": 24,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2824:350:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7afdaef82dee11b9c6d1fd7d2f94ad05c7d98b23da7d65609a6d8a54a3b50c72",
													"typeString": "literal_string \"Ruby      Opal      Topaz     Emerald   AquamarineSapphire  Amethyst  Xenturion Limited   Rare      Epic      Legendary Exotic    Xunicorn  \""
												},
												"value": "Ruby      Opal      Topaz     Emerald   AquamarineSapphire  Amethyst  Xenturion Limited   Rare      Epic      Legendary Exotic    Xunicorn  "
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7afdaef82dee11b9c6d1fd7d2f94ad05c7d98b23da7d65609a6d8a54a3b50c72",
													"typeString": "literal_string \"Ruby      Opal      Topaz     Emerald   AquamarineSapphire  Amethyst  Xenturion Limited   Rare      Epic      Legendary Exotic    Xunicorn  \""
												}
											],
											"id": 23,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "2804:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
												"typeString": "type(bytes storage pointer)"
											},
											"typeName": {
												"id": 22,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2804:5:0",
												"typeDescriptions": {}
											}
										},
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2804:381:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_memory_ptr",
											"typeString": "bytes memory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "3510:167:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "3525:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 37,
															"name": "QUOTES_COUNT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "3533:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3548:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3533:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3525:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "IfStatement",
												"src": "3521:67:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 43,
																	"name": "quotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "3565:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"endExpression": {
																	"id": 45,
																	"name": "QUOTE_LENGTH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "3574:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexRangeAccess",
																"src": "3565:22:0",
																"startExpression": {
																	"hexValue": "30",
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3572:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															],
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3558:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 41,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3558:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3558:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"functionReturnParameters": 35,
													"id": 48,
													"nodeType": "Return",
													"src": "3551:37:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 52,
																"name": "quotes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3613:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"endExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 56,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "3642:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 57,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3650:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3642:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 59,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3641:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 60,
																	"name": "QUOTE_LENGTH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "3655:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3641:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexRangeAccess",
															"src": "3613:55:0",
															"startExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 53,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3620:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 54,
																	"name": "QUOTE_LENGTH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "3628:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3620:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															}
														],
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3606:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 50,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3606:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3606:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_calldata_ptr",
														"typeString": "string calldata"
													}
												},
												"functionReturnParameters": 35,
												"id": 64,
												"nodeType": "Return",
												"src": "3599:70:0"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "3194:216:0",
										"text": "@dev    Solidity doesn't yet support slicing of byte arrays anywhere outside of calldata,\ntherefore we make a hack by supplying our local constant packed string array as calldata"
									},
									"functionSelector": "831b46a1",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQuote",
									"nameLocation": "3425:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "quotes",
												"nameLocation": "3449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3434:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 28,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3465:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3457:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3433:38:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3495:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3495:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:15:0"
									},
									"scope": 98,
									"src": "3416:261:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "3782:149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 75,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3797:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 76,
														"name": "CLASSES_COUNT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "3805:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3797:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "IfStatement",
												"src": "3793:110:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 80,
																	"name": "names",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "3834:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"endExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 84,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "3869:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 85,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3877:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3869:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 87,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3868:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 88,
																		"name": "CLASSES_NAME_LENGTH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "3882:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3868:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexRangeAccess",
																"src": "3834:68:0",
																"startExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 81,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "3840:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 82,
																		"name": "CLASSES_NAME_LENGTH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "3848:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3840:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															],
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 78,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3827:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3827:76:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"functionReturnParameters": 74,
													"id": 92,
													"nodeType": "Return",
													"src": "3820:83:0"
												}
											},
											{
												"expression": {
													"hexValue": "",
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3921:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 74,
												"id": 95,
												"nodeType": "Return",
												"src": "3914:9:0"
											}
										]
									},
									"functionSelector": "b0eca69b",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClassName",
									"nameLocation": "3694:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "names",
												"nameLocation": "3722:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3707:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 67,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3729:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:37:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3767:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3766:15:0"
									},
									"scope": 98,
									"src": "3685:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 99,
							"src": "1453:2481:0",
							"usedErrors": []
						}
					],
					"src": "33:3901:0"
				},
				"id": 0
			}
		}
	}
}